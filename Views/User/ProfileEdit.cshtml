@{
    ViewData["Title"] = "ProfileEdit";
    ViewData["PageHeader"] = "Profile";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}
@model Customer
<!-- Profile Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <!-- Profile Buttons on the Left -->
        <partial name="_MenuContent" />
        <!-- User Profile -->
        <div class="col-md-10">
            <div class="card">
                <div class="card-header">
                    <h3>@ViewData["Title"]</h3>
                </div>
                <div class="card-body">
                    <form asp-controller="User" asp-action="ProfileEdit" method="post">
                        <div class="row">
                            <div class="col-md-8">
                                <!-- Fullname -->
                                <div class="mb-3">
                                    <label for="fullName" class="form-label">Họ và tên:</label>
                                    <input type="text" name="fullName" id="fullName" class="form-control" placeholder="@Model.FullName">
                                </div>

                                <!-- Gender -->
                                <div class="mb-3">
                                    <label class="form-label d-block">Giới tính:</label>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" name="gender" id="male" class="form-check-input" value="Nam" @if (Model.Gender == true)
                                        {
                                            <text>checked</text>
                                        }>
                                        <label for="male" class="form-check-label">Nam</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" name="gender" id="female" class="form-check-input" value="Nu" @if (Model.Gender == false)
                                        {
                                            <text>checked</text>
                                        }>
                                        <label for="female" class="form-check-label">Nữ</label>
                                    </div>
                                </div>

                                <!-- Birthday -->
                                <div class="mb-3">
                                    <label for="birthday" class="form-label">Ngày sinh:</label>
                                    <input type="date" name="birthday" id="birthday" class="form-control" value="@Model.Birthday?.ToString("yyyy-MM-dd")" placeholder="@Model.Birthday">
                                </div>

                                <!-- Email -->
                                <div class="mb-3">
                                    <label for="email" class="form-label">Email:</label>
                                    <input type="email" name="email" id="email" class="form-control" placeholder="@Model.Email">
                                </div>

                                <!-- Phone -->
                                <div class="mb-3">
                                    @{
                                        string displayedPhoneNumber = string.IsNullOrEmpty(Model.Phone) || Model.Phone.Length < 6
                                        ? Model.Phone
                                        : Model.Phone.Substring(0, 3) + new string('*', Model.Phone.Length - 6) + Model.Phone.Substring(Model.Phone.Length - 3);
                                    }
                                    <label for="phone" class="form-label">Số điện thoại:</label>
                                    <input type="tel" name="phone" id="phone" class="form-control" placeholder="@displayedPhoneNumber" pattern="0\d{9}">
                                </div>
                            </div>

                            <div class="col-md-4 input-group-append d-flex justify-content-center">
                                <button class="ajax-submit-btn btn btn-primary px-4" style="font-weight:700;max-height:50px"><i class="far fa-edit" style="padding-right:10px"></i>Xác nhận</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Profile End -->
@* @section Scripts
{
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <script>
        var citis = document.getElementById("city");
        var districts = document.getElementById("district");
        var wards = document.getElementById("ward");

        var selectedCity, selectedDistrict, selectedWard;
        var Parameter = {
            url: "https://raw.githubusercontent.com/kenzouno1/DiaGioiHanhChinhVN/master/data.json",
            method: "GET",
            responseType: "application/json",
        };

        var promise = axios(Parameter);
        promise.then(function (result) {
            renderCity(result.data);
        });

        function renderCity(data) {
            for (const x of data) {
                citis.options[citis.options.length] = new Option(x.Name, x.Id);
            }
            citis.onchange = function () {
                district.length = 1;
                ward.length = 1;
                if (this.value != "") {
                    const result = data.filter(n => n.Id === this.value);

                    for (const k of result[0].Districts) {
                        district.options[district.options.length] = new Option(k.Name, k.Id);
                    }
                }
            };

            district.onchange = function () {
                ward.length = 1;
                const dataCity = data.filter((n) => n.Id === citis.value);
                if (this.value != "") {
                    const dataWards = dataCity[0].Districts.filter(n => n.Id === this.value)[0].Wards;

                    for (const w of dataWards) {
                        wards.options[wards.options.length] = new Option(w.Name, w.Id);
                    }
                }
            };

            // Sự kiện khi chọn thành phố
            citis.addEventListener("change", function () {
                selectedCity = citis.selectedOptions[0].text;
                console.log("Selected City:", selectedCity);
            });

            // Sự kiện khi chọn quận/huyện
            districts.addEventListener("change", function () {
                selectedDistrict = districts.selectedOptions[0].text;
                console.log("Selected District:", selectedDistrict);
            });

            // Sự kiện khi chọn phường/xã
            wards.addEventListener("change", function () {
                selectedWard = wards.selectedOptions[0].text;
                console.log("Selected Ward:", selectedWard);
            });
        };

        $(document).ready(function () {
            $(".ajax-submit-btn").click(function () {
                var address_ajax = (document.getElementById("infoAddress").value + ", " + selectedWard + ", " + selectedDistrict + ", " + selectedCity).toString();
                $.ajax({
                    url: "/User/Address/Edit",
                    method: "POST",
                    data: {
                        location: address_ajax // Không cần sử dụng $() ở đây
                    },
                    success: function (data) {
                        console.log(data.location); // Thay vì console.error, sử dụng console.log để in thông tin lên console
                    },
                    error: function () {
                        console.log("Lỗi");
                    }
                });
                console.log("out ajax:", address_ajax);
            });

        });

    </script>
} *@