@{
    ViewData["Title"] = "All Product";
    ViewData["PageHeader"] = "Product";
    Layout = "~/Views/Shared/_LayoutStore.cshtml";
}

@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common;
@model X.PagedList.IPagedList<Book>

<!-- Shop Start -->
<div class="container-fluid pt-5">
    <div class="row px-xl-5">
        <!-- Shop Sidebar Start -->
        <partial name="_ShopSideBar" />
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-12">
            <div class="row pb-3" id="filtered-products">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <form asp-controller="Product" asp-action="Search">
                            <div class="input-group">
                                <input type="text" name="keywords" class="form-control" placeholder="Search by name">
                                <div class="input-group-append">
                                    <span class="input-group-text bg-transparent text-primary">
                                        <i class="fa fa-search"></i>
                                    </span>
                                </div>
                            </div>
                        </form>
                        <div class="dropdown ml-4">
                            <button class="btn border dropdown-toggle" type="button" id="triggerId" data-toggle="dropdown" aria-haspopup="true"
                                    aria-expanded="false">
                                Sort by
                            </button>
                            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="triggerId">
                                <a class="dropdown-item" href="#">Giá Tăng</a>
                                <a class="dropdown-item" href="#">Giá Giảm</a>
                            </div>
                        </div>
                    </div>
                </div>

                @foreach (var item in Model)
                {
                    <partial name="_Product" model="item" />
                }


                <!-- Pagination Start -->
                <div class="col-12 pb-1">
                    <nav aria-label="Page navigation">
                        @Html.PagedListPager(Model, page => Url.Action("AllProduct", new { page = page }),
                                 new PagedListRenderOptions
                        {
                            LiElementClasses = new string[] { "page-item" },
                            UlElementClasses = new string[] { "pagination", "justify-content-center", "mb-3" },
                            PageClasses = new string[] { "page-link" },

                        })
                    </nav>
                </div>
                <!-- Pagination End -->
            </div>
        </div>
        <!-- Shop Product End -->
    </div>
</div>
<!-- Shop End -->
@section scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script>
        $(document).ready(function () {
            //Func Cart
            $(".ajax-add-to-cart").click(function () {
                $.ajax({
                    url: "/Cart/AddToCart",
                    data: {
                        productId: $(this).data("id"),
                        quantity: 1,
                        type: "ajax"
                    },
                    success: function (data) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Thêm giỏ hàng thành công',
                            showConfirmButton: false,
                            timer: 2500
                        }),
                            $("#cart_count").html(data.quantity);
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Thêm giỏ hàng thất bại',
                            text: 'Vui lòng thử lại',
                            showConfirmButton: false,
                            timer: 2500
                        });
                    }
                });
            });
            //Func Filter in View/Shared/_ShopSideBar
            $("#btnFilter").click(function (event) {
                console.log("Button clicked");

                var priceRange = getSelectedCheckboxes("price-filter-form");
                var data = {
                    PriceRange: priceRange
                };

                $.ajax({
                    url: "/Product/GetFilteredProduct",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    success: function (result) {
                        $("#filtered-products").html(result);
                    },
                    error: function () {
                        console.log("Error sending data to controller");
                    }
                });

                console.log("Selected Prices: ", priceRange);
            });

            function getSelectedCheckboxes(formid) {
                //Khởi tạo mảng
                var selectedPrices = [];

                // Lấy tất cả các checkbox trong form
                var checkboxes = $('#' + formid + " input[type='checkbox']");  // Thêm dấu cách giữa formid và "input[type='checkbox']"

                // Lặp qua từng checkbox để kiểm tra xem nó có được chọn không
                checkboxes.each(function () {
                    if ($(this).prop("checked")) {
                        // Nếu checkbox được chọn, thêm giá trị của nó vào mảng
                        selectedPrices.push($(this).attr("value"));
                    }
                });

                return selectedPrices; // Thêm dòng này để trả về giá trị của mảng
            }
        });
    </script>
}
